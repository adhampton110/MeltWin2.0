
name: Deploying to shinyapps.io

# Controls when the action will run. 
on:
    
  workflow_run:
    workflows: ["Update data"]
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab. This is incase something needs to be updated ASAP.
  workflow_dispatch:

  # Run the workflow every week on Monday at 11:59 PM
  schedule:
    - cron: '59 23 * * 1'

# RUNNING THE DEPLOYMENT
jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     # If this ever breaks down, you can make it Ubuntu-lastest
#     runs-on: Ubuntu-20.04

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # build the docker image and give it the name main
#       - name: Build images
#         run: docker build -t main . 
#       # run the docker image supply the secrets from the github secrets store.  
#       - name: deploy
#         run: >
#           docker run main
  shiny-deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: 4.2.1
    
      - name: Install Application Dependencies
        run: install.packages(c("shiny","rsconnect"))
        shell: Rscript {0} 
      
      - name: Authorize & Deploy Application
        env:
          SHINY_ACC_NAME: ${{ secrets.SHINY_ACC_NAME }}
          TOKEN: ${{ secrets.TOKEN }}
          SECRET: ${{ secrets.SECRET }}
        run: |
          rsconnect::setAccountInfo("${{ secrets.SHINY_ACC_NAME }}", "${{ secrets.TOKEN }}", "${{ secrets.SECRET }}")
          rsconnect::deployApp(appName = "MeltShiny", appPrimaryDoc = "code/app.R", forceUpdate = "TRUE")
        shell: Rscript {0}